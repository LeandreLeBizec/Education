summary(mod2)$coefficients
summary(mod2)$coefficients[,5]
summary(mod2)$coefficients["textileD",4]
#Q6
summary(mod2)$coefficients["textileD",4] < 0.05
setwd("~/Info_3a/TP_R/TP_S6/TP_2022")
cherry <- read.table("CherryTrees.txt", header = T)
cherry
# on veut expliquer le volume grâce au diametre
# variable à expliquer : Volume (y)
# variable explicative : Diam (x)
plot(Volume, Diam)
attach(cherry)
# on veut expliquer le volume grâce au diametre
# variable à expliquer : Volume (y)
# variable explicative : Diam (x)
plot(Volume, Diam)
#reg(y~x, data)
reg=lm(Volume~Diam, data=cherry)
resume=summary(reg)
resume
resume$coefficients
resume$coefficients[,4]
resume$coefficients[,"Estimate"]
# B0 = -0.9352902
# B1 = 5.0492628
resume$coefficients["Diam",4]
# B0 = -0.9352902
# B1 = 5.0492628
resume$coefficients["Diam",4]<0.05
lines(Volume, predict(reg),col="red",lwd=3)
lines(Diam, predict(reg),col="red",lwd=3)
# on veut expliquer le volume grâce au diametre
# variable à expliquer : Volume (y)
# variable explicative : Diam (x)
plot(Volume, Diam)
# on veut expliquer le volume grâce au diametre
# variable à expliquer : Volume (y)
# variable explicative : Diam (x)
plot(Diam, Volume)
lines(Diam, predict(reg),col="red",lwd=3)
y <- predict(reg) #valeurs ajustées
e <- Volume - y # residu
sigma <- sqrt(sum(e^2)/(length(e)-2))
resume=summary(reg)
resume
plot(reg$fitted.values,reg$residuals, ylim = c(-500,500), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
plot(reg$fitted.values,reg$residuals, ylim = c(-10,10), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
plot(reg$fitted.values,reg$residuals, ylim = c(-5,5), xlab="residus",ylab="valeur ajusté")
plot(reg$fitted.values,reg$residuals, ylim = c(-1,1), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
plot(reg$fitted.values,reg$residuals, ylim = c(-1/2,1/2), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
predict(reg, data.frame(Diam=38))
predict(reg, data.frame(Diam=38, Hauteur=24))
predict(reg, data.frame(Diam=50))
predict(reg, data.frame(Diam=20))
predict(reg, data.frame(Diam=0.20))
predict(reg, data.frame(Diam=0.50))
predict(reg, data.frame(Diam=0.38, Hauteur=24))
predict(reg, data.frame(Diam=0.38, Hauteur=24), interval = "prediction")
I<-predict(reg,data.frame(Diam=0.20:0.60),interval = "prediction")
plot(Diam, Volume)
lines(0:40,I[,"lwr"])
lines(0:40,I[,"upr"])
lines(0.20:0.60,I[,"lwr"])
lines(0.20:0.60,I[,"upr"])
lines(0.20:0.60,I[,"lwr"])
lines(0.20:0.60,I[,"upr"])
setwd("~/Info_3a/TP_R/TP_S6/TP2/TP2_Donnees")
courrier = read.table("Courrier.txt", header = T)
#Q1) Utiliser directement les variables du df
attach(courrier)
#Q2) Graphe des données
plot(Poids,Nb_lettres,xlab="Poids du courrier (t)",ylab="Nombre de lettres",pch=19, xlim=c(9,39),ylim=c(700,2500))
#graphiquement, un modèle linéaire semble justifié
#Q3) Régression linéaire
reg=lm(Nb_lettres~Poids,data=courrier)
resume=summary(reg)
resume
#Q4) droite
x=c(min(Poids),max(Poids))
y=198+57.7*x
#on recupère Estimate de la partie Coeff
lines(x,y,col="blue",lwd=3)
#Q5) R
#R² = 0.9628
resume$r.squared
#Q6) Graphe des résidus
plot(reg$fitted.values,reg$residuals,xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
#residus uniformement réparti autour de 0, hypothèse de linéarité validé !
#Q7) Hypothèse de nullité
resume$coefficients[8] < 0.05 #le test sur B1<5% on en déduit que B1(57.7) est != 0
#Q8)
x=27.5
p=198+57.7*x
predict(reg,data.frame(Poids=27.5))
#Q9)
predict(reg,data.frame(Poids=27.5),interval = "prediction")
#Q10)
I<-predict(reg,data.frame(Poids=0:40),interval = "prediction")
plot(Poids,Nb_lettres,xlab="Poids",ylab="Nombre de lettres")
lines(0:40,I[,"lwr"])
lines(0:40,I[,"upr"])
setwd("~/Info_3a/TP_R/TP_S6/TP_2022")
cherry <- read.table("CherryTrees.txt", header = T)
attach(cherry)
# Question 2 : Nuage de points
# on veut expliquer le volume grâce au diametre
# variable à expliquer : Volume (y)
# variable explicative : Diam (x)
plot(Diam, Volume)
# Question 3a : Régression linéaire simple du volume sur le diamètre
#reg(y~x, data)
reg=lm(Volume~Diam, data=cherry)
resume=summary(reg)
resume$coefficients[,"Estimate"]
# B0 = -0.9352902
# B1 = 5.0492628
resume$coefficients["Diam",4]<0.05
# True, donc on peut affirmer avec un risque de 5% que le diametre à un effet significative sur le volume
# Question 3b : Tracé de la droite de régression
lines(Diam, predict(reg),col="red",lwd=3)
# Question 3c : Estimation de l’écart-type résiduel du modèle
y <- predict(reg) #valeurs ajustées
e <- Volume - y # residu
sigma <- sqrt(sum(e^2)/(length(e)-2))
# on retrouve bien la même valeur qu'avec summary(reg)
# Question 3d : Graphe des résidus
plot(reg$fitted.values,reg$residuals, ylim = c(-1/2,1/2), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
# Un semblant de parabole se forme, l'hypothèse d'homoscédasticité n'est pas vérifiée
# Le modèle sous-estime le volume des arbres
# Question 3e : Prédiction du volume d'un arbre de 38 cm de diamètre et de 24 m de hauteur
predict(reg, data.frame(Diam=0.38, Hauteur=24), interval = "prediction")
# Question 3f : Intervalle de prévision
I<-predict(reg,data.frame(Diam=0.20:0.60),interval = "prediction")
plot(Diam, Volume)
lines(0.20:0.60,I[,"lwr"])
lines(0.20:0.60,I[,"upr"])
lines(Diam, predict(reg),col="red",lwd=3)
I
I[,"lwr"]
lines(0.20:0.60,I[,"lwr"], col="blue")
lines(0.20:0.60,I[,"upr"], col="blue")
reg2=lm(log(Volume)~log(Diam)+log(Hauteur), data=cherry)
resume=summary(reg)
resume$coefficients[,"Estimate"]
resume
resume2=summary(reg2)
resume
reg2=lm(log(Volume)~log(Diam)+log(Hauteur), data=cherry)
resume2=summary(reg2)
resume
reg2=lm(Volume~Diam+Hauteur, data=cherry)
resume2=summary(reg2)
resume
reg2=lm(Volume~Diam, data=cherry)
resume2=summary(reg2)
resume
reg2=lm(Volume~Diam+Hauteur, data=cherry)
resume2=summary(reg2)
resume
reg2=lm(log(Volume)~log(Diam)+log(Hauteur), data=cherry)
resume2=summary(reg2)
resume
cherry <- read.table("CherryTrees.txt", header = T)
attach(cherry)
# on veut expliquer le volume grâce au diametre
# variable à expliquer : Volume (y)
# variable explicative : Diam (x)
plot(Diam, Volume)
#reg(y~x, data)
reg=lm(Volume~Diam, data=cherry)
resume=summary(reg)
resume$coefficients[,"Estimate"]
# B0 = -0.9352902
# B1 = 5.0492628
resume$coefficients["Diam",4]<0.05
lines(Diam, predict(reg),col="red",lwd=3)
y <- predict(reg) #valeurs ajustées
e <- Volume - y # residu
sigma <- sqrt(sum(e^2)/(length(e)-2))
plot(reg$fitted.values,reg$residuals, ylim = c(-1/2,1/2), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
predict(reg, data.frame(Diam=0.38, Hauteur=24), interval = "prediction")
I<-predict(reg,data.frame(Diam=0.20:0.60),interval = "prediction")
plot(Diam, Volume)
lines(Diam, predict(reg),col="red",lwd=3)
lines(0.20:0.60,I[,"lwr"], col="blue")
lines(0.20:0.60,I[,"upr"], col="blue")
reg2=lm(log(Volume)~log(Diam)+log(Hauteur), data=cherry)
resume2=summary(reg2)
resume
predict(reg2, data.frame(Diam=0.38, Hauteur=24))
resume2
predict(reg2, data.frame(Diam=0.38, Hauteur=24))
#on ajoute une variable explicative
cherry2 <- cbind.data.frame(cherry, VolumeCylindre= (cherry[,"Diam"]^2 * cherry[,"Hauteur"] ))
reg3=lm(Volume~cherry2$VolumeCylindre, data=cherry2)
resume3=summary(reg3)
resume3
predict(reg3, data.frame(Diam=0.38, Hauteur=24))
predict(reg3, data.frame(VolumeCylindre = 0.38^2 * 24))
predict(reg3, data.frame(VolumeCylindre = 0.38^2 * 24))
-0.007536 + 0.273500*(0.38^2 * 24)
predict(reg3, data.frame(VolumeCylindre = 0.38^2 * 24))
predict(reg3, data.frame(VolumeCylindre = (0.38^2 * 24))
predict(reg3, data.frame(VolumeCylindre = (0.38^2 * 24)))
-0.007536 + 0.273500*(0.38^2 * 24)
predict(reg3, data.frame(VolumeCylindre = (0.38^2 * 24)))
resume3$coefficients
resume3$coefficients[1]
resume3$coefficients[1] +resume3$coefficients[2]*(0.38^2 * 24)
resume3
View(cherry)
R2 <- min(c(resume$r.squared, resume2$r.squared, resume3$r.squared))
R2 <- c(resume$r.squared, resume2$r.squared, resume3$r.squared)
R2
cherry3 <- cbind.data.frame(cherry, Volume2=cherry[,"Diam"]^2, Volume3 = cherry[,"Diam"]^3 )
cherry3 <- cbind.data.frame(cherry, Volume2=cherry[,"Diam"]^2, Volume3 = cherry[,"Diam"]^3 )
reg4=lm(Volume~cherry3$Volume2+cherry3$Volume3, data=cherry3)
resume4=summary(reg4)
resume4
cherry3 <- cbind.data.frame(cherry, Diam2=cherry[,"Diam"]^2, Diam3 = cherry[,"Diam"]^3 )
reg4=lm(Volume~cherry3$Diam2+Diam3$Volume3, data=cherry3)
resume4=summary(reg4)
resume4
predict(reg4, data.frame(Diam2=0.38^2, Diam3=0.38^3))
predict(reg4, data.frame(cherry3$Diam2=0.38^2, cherry3$Diam3=0.38^3))
resume4
resume4$coefficients[1] + resume4$coefficients[2]*0.38^2 + resume4$coefficients[3]*0.38^3
plot(Diam, Volume)
lines(Diam, predict(reg),col="red",lwd=3)
x <- Diam
result =resume4$coefficients[1] + resume4$coefficients[2]*x^2 + resume4$coefficients[3]*x^3
lines(x, result, col="blue", lwd=3)
predict(reg4)
lines(Diam, predict(reg4), col="orange", lwd=3)
lines(Diam, predict(reg4), col="blue", lwd=3)
I<-predict(reg4, data.frame(Diam=0.20:0.60),interval = "prediction")
lines(0.20:0.60,I[,"lwr"], col="orange")
lines(0.20:0.60,I[,"upr"], col="orange")
sport1 <- read.table("sport1.txt", header = T)
sport1 <- read.table("sport1.txt", header = T)
dettach(cherry)
detach(cherry)
detach(cherry)
detach(cherry)
detach(cherry)
detach(cherry)
detach(cherry)
sport1 <- read.table("sport1.txt", header = T)
sport2 <- read.table("sport2.txt", header = T)
# variable à expliquer : oxy (y)
plot(age, oxy)
attach(sport1)
# variable à expliquer : oxy (y)
plot(age, oxy)
# variable à expliquer : oxy (y)
plot(age, oxy)
plot(weigth, oxy)
plot(weight, oxy)
plot(runtime, oxy)
plot(rstpulse, oxy)
plot(runpulse, oxy)
plot(maxpulse, oxy)
cor(sport1[,c(1,2,4,5,6,7)])
cor(sport1[,])
cor(sport1[,"oxy"])
cor(sport1[,1])
cor(sport1[1,1])
cor(sport1[,c(3)])
cor(sport1[,])
reg=lm(oxy~age+weight+runtime+rtspulse+runpulse+maxpulse, data=sport1)
resume=summary(reg)
resume
reg=lm(oxy~age+weight+runtime+rstpulse+runpulse+maxpulse, data=sport1)
resume=summary(reg)
resume
plot(reg$fitted.values,reg$residuals, ylim = c(-10,10), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
plot(reg$fitted.values,reg$residuals, ylim = c(-5,5), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
resume$coefficients[,5]
resume$coefficients[,4]
resume$coefficients[,4]<0.05
resume$coefficients
resume$coefficients[3,"Estimate"]
resume$coefficients[3,"Estimate"]-qt(0.975,8)*resume$coefficients[3,"Std. Error"]
upr = resume$coefficients[3,"Estimate"]+qt(0.975,8)*resume$coefficients[3,"Std. Error"]
lwr = resume$coefficients[3,"Estimate"]-qt(0.975,8)*resume$coefficients[3,"Std. Error"]
print("[ " + lwr + " ; " + upr + " ]" )
# [-0.369 ; 0.064]
t0 = resume$coefficients[3,"Estimate"] / resume$coefficients[3,"Std. Error"]
# t0 n'appartient pas à l'intervalle, donc on rejette H0 donc le coefficient de B3 n'est pas significativement different de 0 avec un risque de 5%
resume$coefficients[3,4]<0.05
modele2=step(reg, direction="backward")
modele2
reg=lm(oxy~age+weight+runtime+rstpulse+runpulse+maxpulse, data=sport1)
modele1=summary(reg)
modele1
plot(reg$fitted.values,reg$residuals, ylim = c(-5,5), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*modele1$sigma, col="red")
abline(h=2*modele1$sigma, col="red")
modele1$coefficients[,4]<0.05
lwr = modele1$coefficients[3,"Estimate"]-qt(0.975,8)*modele1$coefficients[3,"Std. Error"]
upr = modele1$coefficients[3,"Estimate"]+qt(0.975,8)*modele1$coefficients[3,"Std. Error"]
# [-0.369 ; 0.064]
t0 = modele1$coefficients[3,"Estimate"] / modele1$coefficients[3,"Std. Error"]
# t0 n'appartient pas à l'intervalle, donc on rejette H0 donc le coefficient de B3 n'est pas significativement different de 0 avec un risque de 5%
modele1$coefficients[3,4]<0.05
modele2=step(reg, direction="backward")
modele2
R2 <- c(resume2$r.squared, resume3$r.squared, resume4$r.squared)
AICC <- c(extractAIC(reg2), extractAIC(reg3), extractAIC(reg4))
R2 <- c(modele1$r.squared, modele2$r.squared)
R2
exctractAIC(modele1)
extractAIC(modele1)
extractAIC(reg)
extractAIC(modele2)
sport1 <- read.table("sport1.txt", header = T)
sport2 <- read.table("sport2.txt", header = T)
# variable à expliquer : oxy (y)
plot(age, oxy)
plot(weight, oxy)
plot(runtime, oxy)
plot(rstpulse, oxy)
plot(runpulse, oxy)
plot(maxpulse, oxy)
cor(sport1[,])
modele1=lm(oxy~age+weight+runtime+rstpulse+runpulse+maxpulse, data=sport1)
resume=summary(reg)
resume
resume=summary(modele1)
resume
plot(reg$fitted.values,reg$residuals, ylim = c(-5,5), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
plot(modele1$fitted.values,modele1$residuals, ylim = c(-5,5), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
resume$coefficients[,4]<0.05
lwr = resume$coefficients[3,"Estimate"]-qt(0.975,8)*resume$coefficients[3,"Std. Error"]
upr = resume$coefficients[3,"Estimate"]+qt(0.975,8)*resume$coefficients[3,"Std. Error"]
# [-0.369 ; 0.064]
t0 = resume$coefficients[3,"Estimate"] / resume$coefficients[3,"Std. Error"]
# t0 n'appartient pas à l'intervalle, donc on rejette H0 donc le coefficient de B3 n'est pas significativement different de 0 avec un risque de 5%
resume$coefficients[3,4]<0.05
modele2=step(reg, direction="backward")
modele2
modele2=step(modele1, direction="backward")
modele2
AIC <- c(extractAIC(modele1), extractAIC(modele2))
AIC
# on garde l'AIC la plus petite, soit celle du modele2
R2 <- c(modele1$r.squared, modele2$r.squared)
# on garde l'AIC la plus petite, soit celle du modele2
R2 <- c(resume$r.squared, modele2$r.squared)
modele2
summary(modele2)
resume2=summary(modele2)
resume2
# on garde l'AIC la plus petite, soit celle du modele2
R2 <- c(resume$r.squared, resume2$r.squared)
library(emmeans)
golf <- read.table("golf.txt", header = T)
golf <- read.table("Golf.txt", header = T)
golf$Marque = as.factor(Marque)
attach(golf)
golf$Marque = as.factor(Marque)
golf$Golfeur = as.factor(Golfeur)
plot(Dist~Marque)
abline(h=mean(Dist), col="red", lwd=3)
mod1 = lm(perte_poids~textile, data=resistance)
mod1 = lm(Dist~Marqe,  data=golf)
mod1 = lm(Dist~Marque,  data=golf)
mod1 = lm(Dist~Marque,data=golf)
mod1 = lm(Dist~Marque, data=golf)
anova(mod1)
anova(mod1)[1,5]<0.05
X0 <- c(rep(1, length(Marque)))
X1 <- Marque
X <- cbind(X0,X1)
X
Y = Dist
B = solve(t(X)%*%X)%*%t(X)%*%Y
B
mod2 = lm(Dist~Marque+Golfeur, data=golf)
anova(mod2)
anova(mod2)
anova(mod2)[,5]
anova(mod2)[,5]<0.05
# Question 5d : Test sur un coefficient
summary(mod2)$coefficients["C",4] < 0.05
summary(mod2)
# Question 5d : Test sur un coefficient
summary(mod2)$coefficients["MarqueC",4] < 0.05
# Question 6d : Comparaison de moyennes
emmeans(mod2, pairwise~Marque, adjust="bonferroni")
# Question 6d : Comparaison de moyennes
comp = emmeans(mod2, pairwise~Marque, adjust="bonferroni")
comp$contrasts
comp$contrasts[,"p.value"]
comp$contrasts[1,"p.value"]
comp$contrasts[1,"p.value"]<0.05
comp$contrasts[1,"p.value"]
comp$contrasts[1,1]["p.value"]
# Question 6d : Comparaison de moyennes
emmeans(mod2, pairwise~Marque, adjust="bonferroni")
emmeans(mod2, pairwise~Golfeur, adjust="bonferroni")
# Question 6d : Comparaison de moyennes
emmeans(mod2, pairwise~Marque, adjust="bonferroni")
help("table")
# Question 1 : Lecture des deux jeux de données
sport1 <- read.table("sport1.txt", header = T)
sport2 <- read.table("sport2.txt", header = T)
attach(sport1)
# Question 2 : Corrélation et graphiques
# variable à expliquer : oxy (y)
plot(age, oxy)
plot(weight, oxy)
plot(runtime, oxy)
plot(rstpulse, oxy)
plot(runpulse, oxy)
plot(maxpulse, oxy)
cor(sport1[,])
# on regarde la colone oxy pour avoir la correlation entre oxy et les autres variables
# si un sportif parcourt les 1.5 miles plus rapidement que d'habitude, sa consomation d'oxygène va augmenter
# Question 3a : Régression multiple
modele1=lm(oxy~age+weight+runtime+rstpulse+runpulse+maxpulse, data=sport1)
resume=summary(modele1)
resume
# Question 3b : Graphe des résidus
plot(modele1$fitted.values,modele1$residuals, ylim = c(-5,5), xlab="residus",ylab="valeur ajusté")
abline(h=0, col="blue")
abline(h=-2*resume$sigma, col="red")
abline(h=2*resume$sigma, col="red")
# Question 3c : Effet des variables
resume$coefficients[,4]<0.05
# Les variables qui ont un effet significative sur ke la consomation d'oxygene avec un risque de 5% sont :
# runtime, runpulse et maxpulse
# Question 3d : IC à 95% sur le paramètre beta_3
lwr = resume$coefficients[3,"Estimate"]-qt(0.975,8)*resume$coefficients[3,"Std. Error"]
upr = resume$coefficients[3,"Estimate"]+qt(0.975,8)*resume$coefficients[3,"Std. Error"]
# [-0.369 ; 0.064]
t0 = resume$coefficients[3,"Estimate"] / resume$coefficients[3,"Std. Error"]
# t0 n'appartient pas à l'intervalle, donc on rejette H0 donc le coefficient de B3 n'est pas significativement different de 0 avec un risque de 5%
resume$coefficients[3,4]<0.05
# Ce qui est confirmé par la proba critique
# Question 4 : Sélection de variables
modele2=step(modele1, direction="backward")
resume2=summary(modele2)
resume2
# Question 5 : AIC + Choix du meilleur modèle
AIC <- c(extractAIC(modele1), extractAIC(modele2))
# on garde l'AIC la plus petite, soit celle du modele2
R2 <- c(resume$r.squared, resume2$r.squared)
# on garde le R² le plus grand, soit celui du modele 1
# Question 6a : Qualité prédictive du modèle 1
# Question 6b : Qualité prédictive du modèle 2 + choix du meilleur modèle
# Question 6c : Prédiction
# Question 7 : t.test
# Question 8 : Analyse du jeu de données complet
t.test(sport1$age, sport2$age)
help("t.test")
sport=rbind(sport1, sport2)
predict(modele1, sport2)
predict(modele2, sport2)
SCR <- sum(e^2)
y <- predict(modele1, sport2)
e <- sport2$oxy - y # residu
SCR <- sum(e^2)
y <- predict(modele2, sport2)
e <- sport2$oxy - y # residu
SCR2 <- sum(e^2)
predict(mdoele2, data.frame(age=45, weight=77, runtime=10, rstpulse=52, runpulse=172, maxpulse=172))
resume2
# Question 6c : Prédiction
resume2$coefficients[0]
# Question 6c : Prédiction
resume2$coefficients[1]
# Question 6c : Prédiction
resume2$coefficients[1]*45+resume2$coefficients[2]*77+resume2$coefficients[3]*172+resume2$coefficients[4]*172
resume2$coefficients[1] + resume2$coefficients[2]*45+resume2$coefficients[3]*77+resume2$coefficients[4]*172+resume2$coefficients[5]*172
resume4$coefficients[1] + resume4$coefficients[2]*45+resume4$coefficients[3]*77+resume4$coefficients[4]*172+resume4$coefficients[5]*172
resume4$coefficients[1] + resume4$coefficients[2]*45+resume4$coefficients[3]*77+resume4$coefficients[4]*172+resume4$coefficients[5]*172
